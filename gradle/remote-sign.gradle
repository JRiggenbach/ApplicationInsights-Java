/*
 * AppInsights-Java
 * Copyright (c) Microsoft Corporation
 * All rights reserved.
 *
 * MIT License
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this
 * software and associated documentation files (the ""Software""), to deal in the Software
 * without restriction, including without limitation the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software, and to permit
 * persons to whom the Software is furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
 * FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

apply plugin: 'maven'
apply from: "$buildScriptsDir/provided-configuration.gradle"

def remoteJenkinsMachineFileDir = "\\adxsdkbuilder\\tosign"

task copyToRemoteJenkinsMachine(type: Copy) {

    println 'start copy'

//    def fileNames = []
//
    from (fileTree(new File(artifactsDirectoryRoot, project.name)).files) {
        include {
            it.file.name == "*.jar"
//            fileNames << it.file.name
        }
    }
    into remoteJenkinsMachineFileDir

    println 'done copy'

    def token = "c0a032f8ac5928ab21995eefb39bc83ea44069f5"
    def descParameter = "Application%20Insights%20Java%20SDK%20version%20<version>%20signing"
    def keywordsParameter = "Application%20Insights%2C%20Java%20SDK"

    def urlAddress = "curl -H Authorization: OAuth " + token +
            "http://azuresdkci.cloudapp.net/job/sign-jar/build?delay=0sec?Description="
                        + descParameter + "?Keywords=" + keywordsParameter;

    println 'urlAddress'
    println urlAddress

//    def remoteSign = urlAddress.execute()
//    remoteSign.waitFor()

    println 'done!!!'
}

repositories {
    mavenCentral()
}

task prepareRemoteSign << {
    dependsOn copyToRemoteJenkinsMachine
}

// endregion Publishing configuration

// region Public methods
// endregion Public methods
